---
import Layout from "../../layouts/Layout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
---

<Layout
  title={`Base64在线加密解密工具 | ${SITE_TITLE}`}
  description={`Base64在线加密解密工具 | ${SITE_DESCRIPTION}`}
>
  <div class="bg-gray-100 min-h-screen flex flex-col items-center justify-center pt-32 pb-32">
    <div class="bg-white p-8 shadow-md w-full max-w-5xl card">
      <h1 class="text-2xl font-bold mb-6">Base64在线加密解密工具</h1>

      <!-- Tabs -->
      <div class="tabs">
        <a class="tab tab-bordered tab-active" href="#encodeTab">加密</a>
        <a class="tab tab-bordered" href="#decodeTab">解密</a>
        <a class="tab tab-bordered" href="#fileTab">文件转换</a>
      </div>

      <!-- 加密Tab -->
      <div id="encodeTab" class="tab-content mt-6">
        <div class="mb-4">
          <label for="encodeText" class="block text-sm font-medium mb-2">输入文本进行Base64加密</label>
          <textarea
            id="encodeText"
            class="input input-bordered w-full h-32"
            placeholder="请输入需要加密的文本..."
          ></textarea>
        </div>

        <div class="text-center mb-4">
          <button
            type="button"
            onclick="encodeBase64()"
            class="btn btn-info text-white w-full"
          >
            加密为Base64
          </button>
        </div>

        <div class="mb-4">
          <label class="block text-sm font-medium mb-2">加密后的Base64</label>
          <textarea
            id="encodedBase64"
            class="input input-bordered w-full h-32"
            readonly
            placeholder="Base64加密后的结果..."
          ></textarea>
          <button
            type="button"
            onclick="copyResult('encodedBase64')"
            class="btn btn-sm btn-success mt-2 text-white"
          >
            复制
          </button>
        </div>
      </div>

      <!-- 解密Tab -->
      <div id="decodeTab" class="tab-content mt-6 hidden">
        <div class="mb-4">
          <label for="decodeText" class="block text-sm font-medium mb-2">输入Base64进行解密</label>
          <textarea
            id="decodeText"
            class="input input-bordered w-full h-32"
            placeholder="请输入Base64编码的文本..."
          ></textarea>
        </div>

        <div class="text-center mb-4">
          <button
            type="button"
            onclick="decodeBase64()"
            class="btn btn-info text-white w-full"
          >
            解密Base64
          </button>
        </div>

        <div class="mb-4">
          <label class="block text-sm font-medium mb-2">解密后的文本</label>
          <textarea
            id="decodedText"
            class="input input-bordered w-full h-32"
            readonly
            placeholder="解密后的结果..."
          ></textarea>
          <button
            type="button"
            onclick="copyResult('decodedText')"
            class="btn btn-sm btn-success mt-2"
          >
            复制
          </button>
        </div>
      </div>

      <!-- 文件转换Tab -->
      <div id="fileTab" class="tab-content mt-6 hidden">
        <div class="mb-4">
          <label for="fileInput" class="block text-sm font-medium mb-2">上传文件进行Base64转换</label>
          <input
            id="fileInput"
            type="file"
            onchange="handleFileUpload(event)"
          />
        </div>

        <!-- 图片预览 -->
        <div id="filePreview" class="mb-4 hidden">
          <label class="block text-sm font-medium mb-2">文件预览</label>
          <img id="imagePreview" src="" alt="预览图片" class="w-full max-h-60 object-contain border" />
        </div>

        <div class="mb-4">
          <label class="block text-sm font-medium mb-2">文件Base64编码</label>
          <textarea
            id="fileBase64"
            class="input input-bordered w-full h-32"
            readonly
            placeholder="文件的Base64编码结果..."
          ></textarea>
        </div>
      </div>

      <!-- 清除按钮 -->
      <div class="flex justify-between space-x-4 mt-6">
        <button
          type="button"
          onclick="clearResult()"
          class="btn btn-error text-white w-full"
        >
          清除结果
        </button>
      </div>
    </div>
  </div>
</Layout>

<!-- 引入base64加解密相关工具 -->
<script is:inline>
  // 切换Tabs的显示与隐藏
  const tabs = document.querySelectorAll('.tab');
  tabs.forEach(tab => {
    tab.addEventListener('click', function(event) {
      event.preventDefault();
      const targetTab = document.querySelector(event.target.getAttribute('href'));
      document.querySelectorAll('.tab-content').forEach(content => content.classList.add('hidden'));
      document.querySelectorAll('.tab').forEach(tabItem => tabItem.classList.remove('tab-active'));
      targetTab.classList.remove('hidden');
      event.target.classList.add('tab-active');
    });
  });

  function encodeBase64() {
    const input = document.getElementById("encodeText").value;
    if (input.trim() === "") {
      alert("请输入有效的文本进行加密！");
      return;
    }

    const encoded = btoa(input);
    document.getElementById("encodedBase64").value = encoded;
  }

  function decodeBase64() {
    const input = document.getElementById("decodeText").value;
    if (input.trim() === "") {
      alert("请输入有效的Base64进行解密！");
      return;
    }

    try {
      const decoded = atob(input);
      document.getElementById("decodedText").value = decoded;

      // 判断是否为图片Base64并显示预览
      if (input.startsWith("data:image/")) {
        document.getElementById("imagePreview").src = input;
        document.getElementById("filePreview").classList.remove("hidden");
      } else {
        document.getElementById("filePreview").classList.add("hidden");
      }
    } catch (e) {
      alert("Base64解密失败，请检查输入的Base64格式！");
    }
  }

  function handleFileUpload(event) {
    const file = event.target.files[0];
    if (!file) return;

    const reader = new FileReader();
    reader.onload = function(e) {
      const base64 = e.target.result;
      const base64Prefix = `data:${file.type};base64,`;
      const fullBase64 = base64Prefix + base64.split(",")[1];

      document.getElementById("fileBase64").value = fullBase64;

      // 如果是图片文件，显示预览
      if (file.type.startsWith("image/")) {
        document.getElementById("imagePreview").src = fullBase64;
        document.getElementById("filePreview").classList.remove("hidden");
      } else {
        document.getElementById("filePreview").classList.add("hidden");
      }
    };
    reader.readAsDataURL(file);
  }

  function copyResult(elementId) {
    const element = document.getElementById(elementId);
    element.select();
    document.execCommand("copy");
    alert("结果已复制！");
  }

  function clearResult() {
    document.getElementById("encodeText").value = "";
    document.getElementById("encodedBase64").value = "";
    document.getElementById("decodeText").value = "";
    document.getElementById("decodedText").value = "";
    document.getElementById("fileInput").value = "";
    document.getElementById("fileBase64").value = "";
    document.getElementById("filePreview").classList.add("hidden");
    document.getElementById("imagePreview").src = "";
  }
</script>

<!-- 引入tailwind样式 -->
<script is:inline>
  document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', function () {
      document.querySelectorAll('.tab-content').forEach(content => content.classList.add('hidden'));
      document.querySelector(tab.getAttribute('href')).classList.remove('hidden');
    });
  });
</script>

<style is:inline>
  .tab-content {
    display: none;
  }

  .tab-active {
    background-color: #34D399;
    color: white;
  }

  .tab-content:not(.hidden) {
    display: block;
  }
</style>
